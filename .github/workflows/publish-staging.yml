name: Staging CI

# Publishes staging builds. This workflow has validate, test and publish stages.
# Triggers the workflow whenever new tag is pushed.
#on:
#  push:
#    tags:
#      - '*'

on:
  push:
    branches: [ chore/12 ]

jobs:

  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: vroy/gha-kotlin-linter@v2

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Run tests
        run: ./gradlew test

  publish:
    # We don't want to publish anything unless validate and test jobs pass.
    # Any failure of validate and test will prevent publishing.
    needs: [validate, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Publish staging
#        env:
#          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
#          GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
#          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
        run: |
          ./gradlew dokkaJar

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: libs
          path: build/libs

  deploy-javadoc:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      - uses: actions/download-artifact@v1
        with:
          name: libs

      - name: Unzip javadoc
        run: |
          rm -rf javadoc
          mkdir javadoc
          unzip libs/core-javadoc.jar -d javadoc
          rm -rf libs

      - name: Commit changes
        run: |
          ls .
          ls javadoc
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add javadoc
          git commit -m "Javadoc at $(date)" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}

